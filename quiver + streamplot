import numpy as np
import matplotlib.pyplot as plt

# Уравнения для скоростей
def v1(t, x1, A):
    return -A(t)*x1

def v2(t, x2, B):
    return B(t)*x2

# Метод Рунге-Кутты с учетом таблицы Бутчера
def runge_kutta(t, x, h, A, B):
    c = [0, 1/2, 1]
    a = [[0, 0, 0], [1/2, 0, 0], [-1, 2, 0]]
    b = [1/6, 4/6, 1/6]

    k = np.zeros((len(b), len(x))) # k values

    for i in range(len(b)):
        summation = np.zeros(len(x))
        for j in range(i):
            summation += a[i][j] * k[j]
        k[i] = h * np.array([v1(t + c[i]*h, x[0] + summation[0], A), v2(t + c[i]*h, x[1] + summation[1], B)])

    x_next = x + np.dot(b, k)
    return x_next


# Функции A и B для скоростей
def A(t):
    return -np.cos(t)

def B(t):
    return np.cos(t)

T = [0, 0.5, 1.0, 1.5, 2.0]
h = 0.2 # Шаг интегрирования
a = 4
b = 2
for i in range(len(T)):
    y, x = np.mgrid[-4:12:h, -12:4:h]
    vx = -np.cos(T[i]) * x
    vy = np.cos(T[i]) * y
    plt.subplot(1, 2, 1)
    plt.quiver(x, y, vx, vy)
    plt.grid()
    plt.xlabel('x1')
    plt.ylabel('x2')
    plt.subplot(1, 2, 2)
    plt.streamplot(x, y, vx, vy)
    plt.grid()
    plt.xlabel('x2')
    plt.ylabel('x1')
    plt.show()
